upstream project {
  ip_hash;
  server project:8000;
}
upstream afisha_nuxt {
  ip_hash;
  server afisha_nuxt:3000;
}

map $sent_http_content_type $expires {
    "text/html" epoch;
    "text/html; charset=utf-8"  epoch;
    default off;
}
# server {
#     listen 80;
#     server_name docr.smmhub.ru; #
#     server_tokens off;

#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }

#     location / {
#         return 301 https://$host$request_uri;
#     }
# }
server {
    root /var/www;
    listen 80; # Порт который слушает nginx
    server_name localhost; # домен или ip сервера
    gzip on;
    gzip_types  text/plain application/xml text/css application/javascript;
    gzip_min_length 1000;

    location ~ /(api/v1|adm12345622UUjjsanjaooJjf5235) {
      proxy_pass http://project;
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-Host $host;
    }
    location / {
        expires $expires;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_read_timeout 1m;
        proxy_connect_timeout 1m;
        # Адрес нашего приложения, так как контейнеры связаны при помощи
        # docker-compose мы можем обращаться к ним по имени контейнера
        proxy_pass http://afisha_nuxt;
    }

    location ~ /(static|robots.txt) {
      try_files $uri @second_static;
    }

    location /media{
      try_files $uri /var/www/media;
    }
}

